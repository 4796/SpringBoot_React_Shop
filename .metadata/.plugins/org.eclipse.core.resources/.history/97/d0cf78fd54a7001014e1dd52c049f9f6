package com.example.Shop.dto;

import java.util.Date;
import java.util.List;



import com.example.Shop.model.Currency;
import com.example.Shop.model.Product;

import jakarta.annotation.Nonnull;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Transient;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@NoArgsConstructor
public class WorkerDTO implements DTO{
	

	@NotNull(message = "username required. ")
	@Size(min = 3, message = "username needs to have atleast 3 characters. ")
	private String username;
	@NotNull(message = "password required. ")
	private String password;
	@NotNull(message = "name required. ")
	private String name;//novo
	@NotNull(message = "city required. ")
	private String city;//novo
	@NotNull(message = "phone number required. ")
	private String phone_number;//novo
	
    private String token; 
    
    @NotNull(message = "pay required. ")
    double pay;
	//Date date_of_employment;//danas
  	

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getPhone_number() {
		return phone_number;
	}

	public void setPhone_number(String phone_number) {
		this.phone_number = phone_number;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public double getPay() {
		return pay;
	}

	public void setPay(double pay) {
		this.pay = pay;
	}

	public List<Product> getProductsInCart() {
		return productsInCart;
	}

	public void setProductsInCart(List<Product> productsInCart) {
		this.productsInCart = productsInCart;
	}
  	
  	
  	
}
